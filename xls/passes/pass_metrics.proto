// Copyright 2023 The XLS Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package xls;

import "google/protobuf/duration.proto";
import "xls/ir/transform_metrics.proto";

// Metrics for a single pass.
message PassMetricsProto {
  // The short name of the pass.
  optional string pass_name = 1;
  // Whether the pass changed the IR.
  optional int64 changed = 2;
  // Transformation metrics such as number of nodes added, etc.
  optional TransformMetricsProto transformation_metrics = 3;
  // Total duration of the running of the pass.
  optional google.protobuf.Duration duration = 4;
  // For fixed point compound passes this is the number of iterations of the
  // pass.
  optional int64 fixed_point_iterations = 5;
  // For compound passes, this is the results of the passes invoked by the pass.
  repeated PassMetricsProto nested_results = 6;
}

// Overall metrics for a pass pipeline.
message PassPipelineMetricsProto {
  // The total number of passes which were run.
  optional int64 total_passes = 1;

  // The metrics of the top-level (compound) pass.
  optional PassMetricsProto pass_metrics = 2;
}
